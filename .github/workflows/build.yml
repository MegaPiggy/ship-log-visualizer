name: Build
on: 
  workflow_dispatch:

jobs:
  pre_job:
    name: Check For Other Releases
    outputs:
        version: ${{ steps.out.outputs.version }}
        exists: ${{ steps.out.outputs.exists }}
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: "actions/checkout@v3"
          
        - name: Fetch
          run: git fetch

        - name: Read Manifest
          id: read-manifest
          run: echo "manifest=$(< ./OuterWildsShipLogVisualizer/version.txt sed ':a;N;$!ba;s/\n/ /g')" >> $GITHUB_OUTPUT

        - name: Check For Release
          id: check-tag
          run: echo "exists=$(git ls-remote --exit-code --tags origin ${{ env.TAG }} >/dev/null 2>&1 && echo true || echo false)" >> $GITHUB_OUTPUT
          env:
            TAG: "v${{steps.read-manifest.outputs.manifest.version}}"
        
        - name: Output Version Info
          id: out
          run: | 
            echo "version=${{steps.read-manifest.outputs.manifest}}" >> $GITHUB_OUTPUT
            echo "exists=${{steps.check-tag.outputs.exists}}" >> $GITHUB_OUTPUT

        - name: Error
          if: ${{ steps.out.outputs.exists != 'false' && (!inputs.bypassCheck) }}
          run: echo "::error file=version.txt,title=Refusing to Release::Your update was not released because there is already a release with the version in version.txt"
  Build:
    name: Build
    needs: pre_job
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - uses: actions/checkout@v3
        name: üßæ Checkout

      - uses: actions/setup-dotnet@v3
        name: üíΩ Setup .NET SDK
        with:
          dotnet-version: 7.0.x

      - name: üì¶ Restore Dependencies
        run: |
          cd OuterWildsShipLogVisualizer
          dotnet restore

      - uses: chickensoft-games/setup-godot@v1
        name: ü§ñ Setup Godot
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          version: 4.2.2 # also valid: 4.0.0.rc1 or 4.0.0, etc
          use-dotnet: true

      - name: üî¨ Verify Setup
        run: |
          dotnet --version
          godot --version

      - name: Import
        continue-on-error: true
        run: |
          cd OuterWildsShipLogVisualizer
          timeout 25s godot --editor

      - name: üßë‚Äçüî¨ Generate .NET Bindings
        run: |
          cd OuterWildsShipLogVisualizer
          godot --headless --build-solutions --quit || exit 0

      - name: ü¶∫ Build Projects
        run: |
          cd OuterWildsShipLogVisualizer
          dotnet build

      - name: Export
        run: |
          export PATH=./rcedit:$PATH
          cd OuterWildsShipLogVisualizer
          mkdir StandaloneWindows64
          godot --headless --export-release "Windows Desktop" ./StandaloneWindows64/OuterWildsShipLogVisualizer.exe
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: OuterWildsShipLogVisualizer
          path: ./OuterWildsShipLogVisualizer/StandaloneWindows64
      
      - name: Zip Asset
        run: |
          cd OuterWildsShipLogVisualizer/StandaloneWindows64
          zip -r OuterWildsShipLogVisualizer.zip *
          mv OuterWildsShipLogVisualizer.zip ..
          cd ..
      
      - name: Upload Asset
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: main
          tag: v${{ needs.pre_job.outputs.version }}
          name: Version ${{ needs.pre_job.outputs.version }}
          omitBodyDuringUpdate: true
          artifacts: "OuterWildsShipLogVisualizer.zip"
          draft: true
          prerelease: false
